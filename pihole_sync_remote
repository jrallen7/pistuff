#!/usr/bin/python3
import os,subprocess,sys
import urllib.request
import codecs


def fetchListRemote(url):
    with urllib.request.urlopen(url) as response:
        listData = sorted(foo.strip() for foo in \
            codecs.decode(response.read(), 'utf-8', 'strict').split())
    return listData

def readListLocal(filename):
    with open(filename, 'rt') as fi:
        fdata = sorted(foo.strip() for foo in fi.read().split())
    return fdata

if __name__ == '__main__':


    adlistLocRemote = r'https://v.firebog.net/hosts/lists.php?type=tick'
    adlistLocLocal = r'/etc/pihole/PyPhDB/adlists.list'
    
    whitelistLocRemote = r'https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt'
    whitelistLocLocal = r'/etc/pihole/PyPhDB/whitelist.list'
    whitelistLocCustom = 'whitelist.custom.txt'

    ### Root Permission Check
    print('Checking root permissions... ', end='')
    if os.geteuid() != 0:
        print('not root, escalating')
        #use this version for python 3.4 or before...
        #subprocess.call(['sudo', 'python3'] + sys.argv)
        #use this version for python 3.5 or later...
        subprocess.call(['sudo', 'python3', *sys.argv])
        quit()
    
    print('root, continuing')

    subprocess.call('./pihole_dump')

    print('fetching remote ad list')
    list1 = fetchListRemote(adlistLocRemote)
    print('reading local ad list')
    list2 = readListLocal(adlistLocLocal)

    print('lists in remote but not in local')
    foo = set(list1)-set(list2)
    if len(foo) == 0:
        print('none')
    else:
        print(foo)
    print('lists in local but not in remote')
    foo = set(list2)-set(list1)
    if len(foo) == 0:
        print('none')
    else:
        print(foo)
    
    subprocess.call('./pihole_clean')
